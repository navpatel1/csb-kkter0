{"version":3,"sources":["Land.js","utils.js","MainStage.js","almost.mp4","App.js","index.js"],"names":["Model","props","group","useRef","useGLTF","nodes","materials","ref","dispose","castShadow","receiveShadow","geometry","mainplane","material","whitecol","sofabottom","sofa","position","ceiling","ceilingcolor","backside","backsidecol","Plane005","tvskin","onClick","randomColor","Math","floor","random","toString","num","Number","substr","tvscreen","color","setHex","Plane005_1","preload","MainStage","TV","useState","vid","document","createElement","src","url","crossOrigin","loop","muted","play","video","rotation","args","emissive","side","THREE","attach","Viewer","shadows","dpr","fallback","camProps","makeDefault","fov","orbitProps","target","enableJoystick","enableKeyboard","Loader","createRoot","getElementById","render"],"mappings":"sOASe,SAASA,EAAMC,GAC5B,IAAMC,EAAQC,mBACd,EAA6BC,YAAQ,cAA7BC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,UAMf,OACE,gDAAOC,IAAKL,GAAWD,GAAvB,IAA8BO,QAAS,KAAvC,UACE,sBACEC,YAAU,EACVC,eAAa,EACbC,SAAUN,EAAMO,UAAUD,SAC1BE,SAAUP,EAAUQ,WAEtB,sBACEL,YAAU,EACVC,eAAa,EACbC,SAAUN,EAAMU,WAAWJ,SAC3BE,SAAUP,EAAUU,KACpBC,SAAU,CAAC,KAAM,GAAK,QAExB,sBACER,YAAU,EACVC,eAAa,EACbC,SAAUN,EAAMa,QAAQP,SACxBE,SAAUP,EAAUa,eAEtB,sBACEV,YAAU,EACVC,eAAa,EACbC,SAAUN,EAAMe,SAAST,SACzBE,SAAUP,EAAUe,cAEtB,wBAAOJ,SAAU,CAAC,EAAG,MAAO,MAA5B,UACE,sBACER,YAAU,EACVC,eAAa,EACbC,SAAUN,EAAMiB,SAASX,SACzBE,SAAUP,EAAUiB,SAEtB,sBACEC,QAxCS,WACf,IAAMC,EAAcC,KAAKC,MAAsB,SAAhBD,KAAKE,UAAqBC,SAAS,IAC5DC,ECbDC,OAAO,KAAD,ODaSN,ECbCO,OAAO,KDc5B1B,EAAU2B,SAASC,MAAMC,OAAOL,IAsC1BrB,YAAU,EACVC,eAAa,EACbC,SAAUN,EAAM+B,WAAWzB,SAC3BE,SAAUP,EAAU2B,kBA6B9B7B,IAAQiC,QAAQ,cEnFhB,IAIeC,EAJG,WAChB,OAAO,cAAC,EAAD,KCHM,MAA0B,mCCSnCC,EAAK,WACT,MAAgBC,oBAAS,WACvB,IAAMC,EAAMC,SAASC,cAAc,SAMnC,OALAF,EAAIG,IAAMC,EACVJ,EAAIK,YAAc,YAClBL,EAAIM,MAAO,EACXN,EAAIO,OAAQ,EACZP,EAAIQ,OACGR,KAPFS,EAAP,oBASA,OACE,uBAAMC,SAAU,CAAC,EAAG,EAAG,GAAIlC,SAAU,CAAC,EAAG,MAAO,MAAhD,UACE,+BAAemC,KAAM,CAAC,KAAM,QAC5B,uCAAsBC,SAAU,QAASC,KAAMC,aAA/C,UACE,8BAAcC,OAAO,MAAMJ,KAAM,CAACF,KAClC,8BAAcM,OAAO,cAAcJ,KAAM,CAACF,YAMnC,SAASO,IACtB,OACE,qCACE,cAAC,IAAD,CAAQC,SAAO,EAACC,IAAK,CAAC,EAAG,GAAzB,SACE,eAAC,WAAD,CAAUC,SAAU,KAApB,UACE,4BAAY3C,SAAU,CAAC,GAAI,GAAI,MAC/B,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,IAAD,CACE4C,SAAU,CACRC,aAAa,EACbC,IAAK,GACL9C,SAAU,CAAC,EAAG,MAAO,KAEvB+C,WAAY,CACVC,OAAQ,CAAC,EAAG,MAAO,IAErBC,gBAAc,EACdC,gBAAc,SAIpB,cAACC,EAAA,EAAD,OC/COC,qBAAW3B,SAAS4B,eAAe,SAC3CC,OAAO,cAAC,EAAD,O","file":"static/js/main.c9a9cbdb.chunk.js","sourcesContent":["/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { useGLTF } from \"@react-three/drei\";\nimport { str2Hex } from \"./utils\";\nimport * as THREE from \"three\";\n\nexport default function Model(props) {\n  const group = useRef();\n  const { nodes, materials } = useGLTF(\"/land.gltf\");\n  const handleTv = () => {\n    const randomColor = Math.floor(Math.random() * 16777215).toString(16);\n    const num = str2Hex(randomColor);\n    materials.tvscreen.color.setHex(num);\n  };\n  return (\n    <group ref={group} {...props} dispose={null}>\n      <mesh\n        castShadow\n        receiveShadow\n        geometry={nodes.mainplane.geometry}\n        material={materials.whitecol}\n      />\n      <mesh\n        castShadow\n        receiveShadow\n        geometry={nodes.sofabottom.geometry}\n        material={materials.sofa}\n        position={[1.33, 0.7, 4.02]}\n      />\n      <mesh\n        castShadow\n        receiveShadow\n        geometry={nodes.ceiling.geometry}\n        material={materials.ceilingcolor}\n      />\n      <mesh\n        castShadow\n        receiveShadow\n        geometry={nodes.backside.geometry}\n        material={materials.backsidecol}\n      />\n      <group position={[0, 2.33, -5.66]}>\n        <mesh\n          castShadow\n          receiveShadow\n          geometry={nodes.Plane005.geometry}\n          material={materials.tvskin}\n        ></mesh>\n        <mesh\n          onClick={handleTv}\n          castShadow\n          receiveShadow\n          geometry={nodes.Plane005_1.geometry}\n          material={materials.tvscreen}\n        >\n          {/* <Html transform position={[0, 0, 0.071]}>\n            <div\n              style={{\n                transform:\n                  \"scaleY(0.126) scaleX(0.1732) translate(-640px, -360px)\",\n                width: \"0px\",\n                height: \"0px\",\n                userSelect: \"none\"\n              }}\n            >\n              <iframe\n                title=\"YouTube\"\n                width=\"1280px\"\n                height=\"720px\"\n                style={{\n                  userSelect: \"none\"\n                }}\n                src=\"https://www.youtube.com/embed/2tBFBHhnFHM\"\n              />\n            </div>\n          </Html> */}\n        </mesh>\n      </group>\n    </group>\n  );\n}\n\nuseGLTF.preload(\"/land.gltf\");\n","export function str2Hex(hex) {\n  return Number(`0x${hex.substr(1)}`);\n}\n","import Land from \"./Land\";\n\nconst MainStage = () => {\n  return <Land />;\n};\n\nexport default MainStage;\n","export default __webpack_public_path__ + \"static/media/almost.30c97ac7.mp4\";","import { Suspense, useState } from \"react\";\nimport * as THREE from \"three\";\nimport { Canvas } from \"@react-three/fiber\";\nimport { Loader } from \"@react-three/drei\";\nimport { FPSControls } from \"react-three-fpscontrols\";\n\nimport MainStage from \"./MainStage\";\nimport url from \"./almost.mp4\";\n\nconst TV = () => {\n  const [video] = useState(() => {\n    const vid = document.createElement(\"video\");\n    vid.src = url;\n    vid.crossOrigin = \"Anonymous\";\n    vid.loop = true;\n    vid.muted = false;\n    vid.play();\n    return vid;\n  });\n  return (\n    <mesh rotation={[0, 0, 0]} position={[0, 2.33, -5.54]}>\n      <planeGeometry args={[5.55, 2.26]} />\n      <meshStandardMaterial emissive={\"white\"} side={THREE.DoubleSide}>\n        <videoTexture attach=\"map\" args={[video]} />\n        <videoTexture attach=\"emissiveMap\" args={[video]} />\n      </meshStandardMaterial>\n    </mesh>\n  );\n};\n\nexport default function Viewer() {\n  return (\n    <>\n      <Canvas shadows dpr={[1, 2]}>\n        <Suspense fallback={null}>\n          <pointLight position={[10, 10, 10]} />\n          <MainStage />\n          <TV />\n          <FPSControls\n            camProps={{\n              makeDefault: true,\n              fov: 55,\n              position: [0, 2.537, 0.7]\n            }}\n            orbitProps={{\n              target: [0, 2.537, 0]\n            }}\n            enableJoystick\n            enableKeyboard\n          />\n        </Suspense>\n      </Canvas>\n      <Loader />\n    </>\n  );\n}\n","import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport \"./style.css\";\nimport App from \"./App\";\n\nconst root = createRoot(document.getElementById(\"root\"));\nroot.render(<App />);\n"],"sourceRoot":""}